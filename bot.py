import telebot
import numpy as np
import librosa
import subprocess
from tensorflow.keras.models import load_model

# üîê –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = "7424010381:AAF1_4x5XJpUj7V_d0KgmbZynggT7bJqxvg"
bot = telebot.TeleBot(TOKEN)

# üß† –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
model = load_model("speaker_classifier.keras")

# üè∑Ô∏è –ö–ª–∞—Å—Å—ã
labels = {0: "speaker1", 1: "speaker2", 2: "speaker3"}

@bot.message_handler(content_types=['text'])
def handle_text(message):
    bot.reply_to(message, "üëã –ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ–≤–æ—Ä—è—â–µ–≥–æ.")

@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    try:
        file_info = bot.get_file(message.voice.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ogg-—Ñ–∞–π–ª–∞
        with open("input.ogg", 'wb') as f:
            f.write(downloaded_file)

        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ wav
        subprocess.call(['ffmpeg', '-y', '-i', 'input.ogg', 'input.wav'])

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ MFCC
        y, sr = librosa.load("input.wav", sr=16000)
        mfcc = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=13).T
        mfcc = mfcc[:348] if mfcc.shape[0] > 348 else np.pad(mfcc, ((0, 348 - mfcc.shape[0]), (0, 0)))
        mfcc = np.expand_dims(mfcc, axis=0)

        # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
        pred = model.predict(mfcc)
        speaker = labels[np.argmax(pred)]

        bot.reply_to(message, f"üîä –ì–æ–≤–æ—Ä—è—â–∏–π: {speaker}")

    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫
bot.polling()
